学习报告3
报告时间:2020.11.22   星期日
部门:软件部
姓名:倪培洋
学号:2000300222

环节一:每日感想
周一:学习了pandas的合并操作,和文件的导入、导出的操作(非常有用)(感觉自己可以了)......
周二:今天接触了Matplotlib.pyplot.感觉自己又离作品完成进了一步.也看了一点关于实现线性回归的代码,三大件的基础水平还有待提高
周三:这几天进度有一点慢...今天只学了matplotlib的bar柱状图
周四:今天又复习了一下多元线性回归的公式,准备着手实现代码(预计进度很慢,而且在看代码的过程中还要学习很多新的知识,如api等)
周五:今天综合了文件导入、pandas和bar柱状图的相关知识自己画出了小黄车日期和cnt之间的bar柱状图,有关知识还要加强练习和巩固
周六:今天尝试着实现了一下,结果出了很多偏差,四个小时就跑了这一点...,还没看懂

环节二:学习笔记
23.
在print中,若预期输出n个相同内容,可不选择用循环,而用*n,
注意:这个多次输出的"*n",只对str类型成立,对数字类型则变为普通乘法,若想对数据进行重复输出,可以用str()函数转换类型
如下面两个例子:
print(np.random.random()*10)
print((str(np.random.random())+" ")*10)
24.Pandas:
Ⅰ:创建dataframe:
pd.DataFrame()
此类型会有行标(index)和列标(columns)
有两种创建方式:①借用NumPy的数组,然后index = ?
columns = ?
②向DataFrame()的参数中传入列表,一列一列初始化,此时,列表的键名称就是列标,行标可以再用index = ?
第一种:p3 = pd.DataFrame(np.random.randn(3,4)*10,index = index1,columns = columns1)
print(p3)
第二种:p4 = pd.DataFrame({'C1':range(1,4),
                   'C2':range(5,8),
                   'C3':range(11,14),
                   'C4':range(99,102)},index = index1)
print(p4)
Ⅱ:选择数据
df = pd.DataFrame(np.arange(12).reshape(3,4),index = np.arange(1,4),columns = ['a','b','c','d'])
print(df)
print(df['a']) 
用中括号方法时只能填入列标并输出该列,不能操作行标
print(df.loc[1])
用loc标签时不能单独使用列标而可以单独使用行标
print(df.loc[1:3,['a','b','c']])
loc标签可以使用" : "切片遍历行标,而不能遍历列标,只能一个一个单独选择
25.Pandas:
Ⅰ使用pd.read_csv('file_name.csv')导入数据时,导入的文件应在路径中
查看路径的方法:
import os
print(os.getcwd())
也可以放在任何路径中,但导入时需要在pd.read_csv()的括号中写入 r '文件的路径'
26.Matplotlib:
①x = np.linspace()
y = .....
plt.plot(x,y,color = 'pink',linewidth = 10.0,linestyle = '--')
plt.show()  //展示图像
②设置x,y坐标轴的范围
plt.xlim((-1,1))
plt.ylim((0,1))
③设置坐标轴的ticks(设置坐标轴上的卡点)
plt.xticks((-1,1)) //x轴上两个卡点-1和1
plt.yticks([-1,1,2,3,4,5],['y1','y2','y3','y4','y5','y6']) //y轴上6个卡点,且从上到下卡点名称依次为y1--y6
改变ticks字体可以用r' $ content $ ',在$ $中空格用转义字符\ 表示,特殊字符也可以用转义字符,如α:\alpha
④改变坐标轴位置:
框架有四个,top,left,right,bottom
ax = plt.gca() //gca = get current axis
引用时用:ax.spines['top']
让它消失:ax.spines['top'].set_colors('none')
设置充当坐标轴的脊梁:
让左和下脊梁分别充当y,x轴
ax.xaxis.set_ticks_position('bottom')
ax.yaxis.set_ticks_position('left')
⑤改变x,y轴位置:
//以下两个用的都是'data'参数,也可以用'axes'参数,后面加的数据代表将其绑定在另一个轴的百分之多少
ax.spines['left'].set_position(('data',0))
ax.spines['bottom'].set_position(('data',0))
//把x轴绑定在y轴的0位置.
//把y轴绑定在x轴的0位置上
⑥scatter散点图
plt.scatter(x,y,s = ,c = ,alpha = )
⑦bar柱状图
plt.bar(x,y)
设置xlim,ylim,xticks和yticks与scatter散点图的操作相同
27.NuMpy补充笔记:
①建立一个数组(矩阵)可以用np.array()
若要建立二维数组那()就因该有两个系统的[]
三维数组则应有三个系统的[]
②矩阵数乘可以用*号进行运算,矩阵与矩阵之间的乘法用np.dot(A,B)实现
或A.dot(B)
③np.power对数组进行乘方运算
np.power(X1,X2)
若要进行数组与数组的乘方运算,X1与X2的列数必须相同,X2中对应的元素为指数
X2还可以为一个数字
④np.zeros(shape, dtype=None, order='C')
Return a new array of given shape and type, filled with zeros

环节三:下周计划
本周学校课程学习任务较多,绘蓝杯进度有点慢,下周应调整学习态度,珍惜学习的时间,提高效率.
下周首要任务就是看懂并且下出来一遍线性回归的代码
https://blog.csdn.net/Cowry5/article/details/80174130
并且根据小黄车的数据修改出自己的代码

